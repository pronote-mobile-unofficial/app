image: openjdk:8-jdk

variables:
  ANDROID_COMPILE_SDK: "25"
  ANDROID_BUILD_TOOLS: "25.0.2"
  ANDROID_SDK_TOOLS: "25.2.5"
  SDK: "android-sdk-linux"

cache:
  paths:
    - android-sdk-linux/
    - android-sdk.zip
    - node_modules/

before_script:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
  # Download tools
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/tools_r${ANDROID_SDK_TOOLS}-linux.zip
  # Extract SDK
  - unzip -qq android-sdk.zip -d $SDK
  - echo y | $SDK/tools/android --silent update sdk --no-ui --all --filter android-${ANDROID_COMPILE_SDK}
  - echo y | $SDK/tools/android --silent update sdk --no-ui --all --filter build-tools-${ANDROID_BUILD_TOOLS}
  - echo y | $SDK/tools/android --silent update sdk --no-ui --all --filter extra-android-m2repository
  # Export variables for building
  - export ANDROID_HOME=$PWD/$SDK
  - export PATH=$PATH:$PWD/$SDK/platform-tools/
  # Make gradlew executable
  - chmod +x ./gradlew
  # Setup dependencies for documentation
  - curl -sL https://deb.nodesource.com/setup_6.x -o nodesource_setup.sh
  - bash nodesource_setup.sh
  - apt-get --quite install --yes nodejs nodejs-legacy build-essential
  - npm install gitbook-cli -g
  - gitbook fetch latest

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
    - app/build/outputs/

unitTests:
  stage: test
  script:
    - ./gradlew test

pages:
  stage: deploy
  script:
    - gitbook build docs public
  artifacts:
    paths:
      - public
  only:
    - master
